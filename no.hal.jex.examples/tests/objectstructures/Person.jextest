test objectstructures.Person

import java.util.Collection

instance
	hallvard = new Person("Hallvard", 'M'),
	marit = new Person("Marit", 'F'),
	jens = new Person("Jens", 'M'),
	anne = new Person("Anne", 'F')

state method initial() {
	father == null;
	mother == null;
	testChildren(#[]);
}

sequence constructor "Personer uten foreldre og barn" {
	-->
	state
		hallvard { initial }
		marit { initial }
		jens { initial }
		anne { initial }
}

sequence farskapIllegalArgumentException "Marit kan ikke vÃ¦re far" {
	-- jens.father = marit throws IllegalArgumentException
	-- anne.father = marit throws IllegalArgumentException
}

sequence farskapSetFather "Hallvard er far til Jens og Anne" {
	-- jens.father = hallvard -->
	state
		hallvard {
			father == null;
			mother == null;
			testChildren(#[jens]);
		}
		jens {
			father == hallvard;
			mother == null;
			testChildren(#[]);
		}
	-- anne.father = hallvard -->
	state
		hallvard {
			father == null;
			mother == null;
			testChildren(#[jens, anne]);
		}
		jens {
			father == hallvard;
			mother == null;
			testChildren(#[]);
		}
		anne {
			father == hallvard;
			mother == null;
			testChildren(#[]);
		}
}

method void testChildren(Person person, Collection<?> children) {
	assertEquals(children.size, person.childCount);
	var i = 0;
	for (child : children) {
		assertEquals(child, person.getChild(i));
		i = i + 1;
	}
}
